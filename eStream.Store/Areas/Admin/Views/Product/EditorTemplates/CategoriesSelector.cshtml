@model string

@Html.HiddenFor(m => m)

<div id="divCategoriesSelector" data-bind="with: $root.categories">
    <ul class="list-group" data-bind="visible: anySelected(), foreach: selectedCategories">
        <li class="list-group-item">
            <!-- ko text: name --><!-- /ko -->
            <button data-bind="click: $parent.remove" class="btn btn-danger badge"><span class="fa fa-times"></span></button>
        </li>
    </ul>

    <button id="btnSelectCategories" type="button" class="btn btn-default btn-outline" data-toggle="modal" data-target="#modalCategories"><span class="fa fa-sitemap"></span>&nbsp;@Html.TA("Select categories")</button>

    <div class="modal fade" id="modalCategories">
        <div class="modal-dialog" id="modalCategoriesDialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">@Html.TA("Category Selector")</h4>
                </div>
                <div class="modal-body">
                    <table class="table table-hover">
                        <tbody data-bind="foreach: categories">
                            <tr data-bind="css: { 'first' : $index() == 0 }">
                                <td>
                                    <input type="checkbox" data-bind="value: id, checked: selected">
                                </td>
                                <td class="description" data-bind="text: name"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">@Html.TA("Close")</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script language="javascript">
    function Category(data) {
        this.id = ko.observable(data.Id.toString());
        this.name = ko.observable(data.NameWithParent);
        this.selected = ko.observable(data.Checked);
    }

    function CategoryListViewModel() {
        var self = this;
        self.categories = ko.observableArray([]);

        self.selectedCategories = ko.computed(function () {
            return ko.utils.arrayFilter(self.categories(), function (category) {
                return category.selected();
            });
        }).extend({ rateLimit: 100 });

        self.anySelected = ko.computed(function () {
            return self.selectedCategories().length > 0;
        }).extend({ rateLimit: 100 });

        self.remove = function (category) {
            category.selected(false);
        };

        self.save = function() {
            var ids = "";
            for (var i = 0; i < self.categories().length; i++) {
                if (self.categories()[i].selected())
                    ids += self.categories()[i].id() + ",";
            }
            $('#@Html.IdFor(m => m)').val(ids);
        };
        var selectedIds = $('#@Html.IdFor(m => m)').val().split(',');
        $.getJSON("/Admin/Category/ListJson", function (data) {
            var mappedCategories = $.map(data, function (item) {
                item.Checked = $.inArray(item.Id.toString(), selectedIds) >= 0;
                var category = new Category(item);
                category.selected.subscribe(function() {
                    self.save();
                });
                return category;
            });
            self.categories(mappedCategories);
        });
    }

    $(function () {
        var model = new CategoryListViewModel();
        window.ViewModel.categories = model;

        var introStep = 1;
        $('#modalCategories').on('show.bs.modal', function (e) {
            if (typeof intro != 'undefined') {
                introStep = intro._currentStep + 1;
                intro.exit();
            }
        });

        $('#modalCategories').on('hidden.bs.modal', function (e) {
            if (typeof intro != 'undefined') {
                intro.start().goToStep(4);
            }
        });
    });


</script>