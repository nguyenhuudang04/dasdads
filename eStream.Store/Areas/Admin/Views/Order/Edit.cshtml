@model Estream.Cart42.Web.Areas.Admin.Models.OrderEditViewModel

@{ ViewBag.Title = "Edit Order".TA(); }
@section Heading
{
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>@ViewBag.Title</h2>
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">@Html.TA("Home")</a>
                </li>
                <li>
                    <a href="@Url.Action("Index", "Order")">@Html.TA("Orders")</a>
                </li>
                <li class="active">
                    <strong>@Html.TA("Order #{0}", @Model.Id)</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-2">
            <div class="title-action">
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>@Html.TA("Order Details")</h5>
        </div>
        <div class="ibox-content">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Id)
                @Html.EditorForModel()
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-primary" type="button" onclick="saveOrder()">@Html.TA("Save")</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function saveOrder() {
        $.post('Edit', ko.toJS(window.ViewModel.order),
                function() {
                    window.location.href = '@Url.Action("Index")';
                })
            .error(function(data) {
                if (data.responseJSON && data.responseJSON.errorMessage) {
                    var errors = '';
                    for (var i = 0; i < data.responseJSON.errorMessages.length; i++) {
                        errors += '<li>' + data.responseJSON.errorMessages[i] + '</li>';
                    }
                    alerts.error(errors);
                }
            });
    }
</script>