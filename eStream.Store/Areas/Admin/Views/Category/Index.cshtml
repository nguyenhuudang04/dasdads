@model Estream.Cart42.Web.Areas.Admin.Models.CategoriesIndexViewModel
@{ ViewBag.Title = "Categories".TA(); }
@section Heading
{
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>@Html.TA("Product Categories")</h2>
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">@Html.TA("Home")</a>
                </li>
                <li class="active">
                    <strong>@Html.TA("Categories")</strong>
                </li>
            </ol>
        </div>
        <div class="col-lg-2">
            <div class="title-action">
                @if (User.HasAccess(OperatorRoles.INVENTORY + OperatorRoles.WRITE))
                {
                    <a href="@Url.Action("Create")" class="btn btn-primary"><span class="fa fa-plus"></span>&nbsp;@Html.TA("Add Category")</a>
                }
            </div>
        </div>
    </div>
}

<div class="ibox float-e-margins">
    <div class="ibox-title">
        <h5>@Html.TA("Product Categories")</h5>
    </div>
    <div class="ibox-content">
        @if (Model.Categories.Any())
        {
            <table id="tableCategories" class="table tree">
                <thead>
                    <tr>
                        <th><input type="checkbox" /></th>
                        <th></th>
                        <th>
                            @Html.TA("Category")<br />@Html.TA("Name")
                        </th>
                        <th>
                            @Html.TA("Products")
                        </th>
                        <th>
                            @Html.TA("Products")<br />@Html.TA("(incl child)")
                        </th>
                        <th>
                            @Html.TA("Visible")<br />
                            @Html.TA("in menu")
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @RenderChildCategories(null)
                </tbody>
            </table>
            <div class="row">
                <div class="col-lg-7">
                    <div class="input-group">
                        <div class="dropdown">
                            <button class="btn btn-default btn-outline dropdown-toggle" type="button" data-toggle="dropdown">
                                <i class="fa fa-gears"></i>&nbsp;@Html.TA("Batch Actions")
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-right" role="menu">
                                @if (User.HasAccess(OperatorRoles.INVENTORY + OperatorRoles.DELETE))
                                {
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="#" onclick=" deleteSelectedCategories() "><span class="fa fa-times"></span>&nbsp;@Html.TA("Delete Selected")</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div>@Html.TA("There are no categories yet. Add new category by clicking on the {0} button above", "<strong>" + @Html.TA("Add Category") + "</strong>")</div>
        }
    </div>
</div>


@helper RenderChildCategories(int? parentId)
{
    foreach (var item in Model.Categories.Where(c => c.ParentId == parentId).OrderBy(c => c.SortOrder).ThenBy(c => c.Name))
    {
        <tr class="treegrid-@item.Id @(item.ParentId.HasValue ? "treegrid-parent-" + item.ParentId : "")">
            <td><input type="checkbox" value="@item.Id" /></td>
            <td></td>
            <td>
                <a href="@Url.Action("Edit", new {id = item.Id})">@Model.GetNameWithParent(item.Id)</a>
            </td>
            <td>
                @item.ProductsCount
            </td>
            <td>
                @Model.GetProductsCountWithChild(item.Id)
            </td>
            <td class="text-navy">
                @Html.DisplayFor(m => item.IsVisible)
            </td>
            <td class="text-right">
                <div class="dropdown">
                    <button class="btn btn-default btn-outline dropdown-toggle" type="button" data-toggle="dropdown">
                        <i class="fa fa-gear"></i>
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-right" role="menu">
                        @if (User.HasAccess(OperatorRoles.INVENTORY + OperatorRoles.WRITE))
                        {
                            <li role="presentation"><a role="menuitem" tabindex="-1" href="@Url.Action("Edit", new {id = item.Id})"><span class="fa fa-pencil"></span>&nbsp;@Html.TA("Edit")</a></li>
                        }
                        @if (User.HasAccess(OperatorRoles.INVENTORY + OperatorRoles.DELETE))
                        {
                            <li role="presentation"><a role="menuitem" tabindex="-1" href="@Url.Action("Delete", new {ids = item.Id})"><span class="fa fa-times"></span>&nbsp;@Html.TA("Delete")</a></li>
                        }
                    </ul>
                </div>
            </td>
        </tr>
        @RenderChildCategories(item.Id)
    }
}

<script language="javascript">
    $(function () {
        $('.tree').treegrid({
            initialState: 'collapsed',
            treeColumn: 1,
            expanderExpandedClass: 'glyphicon glyphicon-minus-sign',
            expanderCollapsedClass: 'glyphicon glyphicon-plus-sign'
        });
    });

    function deleteSelectedCategories() {
        var ids = '?';
        $('#tableCategories input:checked').each(function () {
            var id = $(this).val();
            if (!isNaN(id)) ids += 'ids=' + id + '&';
        });
        if (ids != '?')
            window.location.href = '@Url.Action("Delete")' + ids;
    }
</script>
